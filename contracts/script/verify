#!/bin/bash

set -eo pipefail

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
CONTRACTS_DIR="${SCRIPT_DIR:?}/.."

if [ -z "$ETHERSCAN_API_KEY" ]; then
    echo -n 'ETHERSCAN_API_KEY from deployment_secrets.toml: ' > /dev/stderr
    export ETHERSCAN_API_KEY=$(yq eval -e ".chains[\"${CHAIN_KEY:?}\"].etherscan-api-key" $CONTRACTS_DIR/deployment_secrets.toml)
else
    echo -n "ETHERSCAN_API_KEY from env $ETHERSCAN_API_KEY"
fi

export CHAIN_ID=$(yq eval -e ".chains[\"${CHAIN_KEY:?}\"].id" $CONTRACTS_DIR/deployment.toml)
export VERIFIER_ADDRESS=$(yq eval -e ".chains[\"${CHAIN_KEY:?}\"].verifiers[] | select(.selector == \"${VERIFIER_SELECTOR:?}\").verifier" $CONTRACTS_DIR/deployment.toml)
export ESTOP_ADDRESS=$(yq eval -e ".chains[\"${CHAIN_KEY:?}\"].verifiers[] | select(.selector == \"${VERIFIER_SELECTOR:?}\").estop" $CONTRACTS_DIR/deployment.toml)
export ADMIN_ADDRESS=$(yq eval -e ".chains[\"${CHAIN_KEY:?}\"].admin" $CONTRACTS_DIR/deployment.toml)

# NOTE: forge verify-contract seems to fail if an absolute path is used for the contract address.
cd $CONTRACTS_DIR

forge verify-contract --watch \
    --chain-id=${CHAIN_ID:?} \
    --num-of-optimizations=200 \
    --constructor-args "$(\
        cast abi-encode 'constructor(bytes32,bytes32)' \
        0x8cdad9242664be3112aba377c5425a4df735eb1c6966472b561d2855932c0469 \
        0x04446e66d300eb7fb45c9726bb53c793dda407a62e9601618bb43c5c14657ac0 \
    )" \
    --etherscan-api-key=${ETHERSCAN_API_KEY:?} \
    ${VERIFIER_ADDRESS:?} \
    ./src/groth16/RiscZeroGroth16Verifier.sol:RiscZeroGroth16Verifier

forge verify-contract --watch \
    --chain-id=${CHAIN_ID:?} \
    --num-of-optimizations=200 \
    --constructor-args "$(\
        cast abi-encode 'constructor(address,address)' \
        ${VERIFIER_ADDRESS:?} \
        ${ADMIN_ADDRESS:?} \
    )" \
    --etherscan-api-key=${ETHERSCAN_API_KEY:?} \
    ${ESTOP_ADDRESS:?} \
    ./src/RiscZeroVerifierEmergencyStop.sol:RiscZeroVerifierEmergencyStop
